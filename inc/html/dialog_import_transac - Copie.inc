<script>	var mon_xhr;	var progressbar ;	var progressTitle ;	var progressLabel ;	var reader;		$(document).ready(function(){				$('#import_link').click(function(){			$('#file_import').click();		});				$('#file_import').change(function(evt){			//http://www.html5rocks.com/en/tutorials/file/dndfiles/?redirect_from_locale=fr			// Check for the various File API support.			if (window.File && window.FileReader && window.FileList && window.Blob) {				// Great success! All the File APIs are supported.								var files = $('input').get(1).files; // FileList object				f = files[0];								if (!f.name.match(/\.(qif)$/)) {					//client import ne gere pas 'encore' le CSV					server_import_transactions();				}else{					client_import_transactions();				}							} else {				server_import_transactions();			}			$(this).val('');		});				$('#dialog-import-transac').dialog({			autoOpen: false,			dialogClass: "alert",			height: 120,			width: 300,			modal: true		});				progressbar = $( "#progressbar" );		progressTitle = $( "#progresstitle" );		progressLabel = $( ".progress-label" );	 		progressbar.progressbar({			value: false,			change: function() {				progressLabel.text( progressbar.progressbar( "value" )  + "%" );			},			complete: function(){				$('#abort_upload_link').hide();				console.log("Progress 100%");				$(this).progressbar("value", false);			}		});					});			//SERVER IMPORT	function progressHandlingFunction(e){		if(e.lengthComputable){			 percentComplete = Math.round(e.loaded * 100 / e.total);			progressbar.progressbar( "value", percentComplete);			console.log("Progression=" + e.loaded + "/" + e.total);		}	}	function uploadCanceled(e){		console.log("Annulation upload !");		$('#dialog-import-transac').dialog('close');		var notif = noty({			layout: 'top',			type: 'alert',			timeout: 10000,			text: 'Opération annulée !'		});	}		function server_import_transactions(){		console.log("server_import_transactions");				$('#abort_link').click(function(){			mon_xhr.abort();		});				progressTitle.text('Envoi du fichier :');				id_compte = $('.actif').data('id');				var formData = new FormData($('form')[0]);				mon_xhr = $.ajax({			url: 'importer.php?idc='+id_compte,  //server script to process data			type: 'POST',			dataType:"json",			xhr: function() {  // custom xhr				var myXhr = $.ajaxSettings.xhr();				if(myXhr.upload){ // check if upload property exists					$('#dialog-import-transac').dialog('open');					$('#abort_link').show();					myXhr.upload.addEventListener('progress',progressHandlingFunction, false); // for handling the progress of the upload					myXhr.upload.addEventListener('abort', uploadCanceled, false);				}				return myXhr;			},			//Ajax events			beforeSend: function( jqXHR,  settings ){return true;},			success: function (data, status){									if(data.status){										progressTitle.text('Traitement du fichier :');					//$('.liste_transactions').data('nb_total_transactions_chargees',0);					//get_transactions();					console.log("Import " +data.import_id + " du compte " + data.compte.libelle + " : " + data.nb_transactions + " transactions trouvées");					//console.log(dump(data));										console.log("Solde avant import = " + $('#solde_cpt').data('solde_cpt'));										$.each(data.compte.transactions, function(key, value){												percentComplete = Math.round((key+1) * 100 / data.compte.transactions.length);						progressbar.progressbar( "value", percentComplete);												prepend_transaction(value);					});										console.log("Solde après import = " + $('#solde_cpt').data('solde_cpt'));										//reset bindings					set_edit_transac_bindings();										//mise à jour des soldes par transaction					reset_solde_transactions();										var notif = noty({						layout: 'top',						type: 'success',						timeout: 10000,						text: data.nb_transactions + ' transaction(s) ont été importées !'					});										if(data.nb_duplicates > 0){						var notif2 = noty({							layout: 'top',							type: 'warning',							timeout: 10000,							text: $.length(data.duplicates) + ' transaction(s) n\'ont pas été importées car elles existent déjà !'						});												clear_duplicate_decision_list();						$.each(data.compte.duplicates, function(key, duplicate){							call_for_duplicate_decision(duplicate);						});																	}										$('#lien_undo_import').data('import_id', data.import_id);					$('#lien_undo_import').show();					$('#import_link').hide();										$('#lien_undo_import').click(function(){						undo_import($('#lien_undo_import').data('import_id'));					});									}else{					alert(data.error);				}						$('#dialog-import-transac').dialog('close');			},			error: function (data, status, e){				//alert(e);			},			// Form data			data: formData,			//Options to tell JQuery not to process data or worry about content-type			cache: false,			contentType: false,			processData: false		});		return false;	}			//CLIENT IMPORT	function errorHandler(evt) {		switch(evt.target.error.code) {			case evt.target.error.NOT_FOUND_ERR:				alert('Le fichier est introuvable !');				break;			case evt.target.error.NOT_READABLE_ERR:				alert('Le fichier ne peut être lu !');				break;			case evt.target.error.ABORT_ERR:				break; // noop			default:				alert('Erreur de lecture du fichier !');		};	}	function updateProgress(evt) {		// evt is an ProgressEvent.		if (evt.lengthComputable) {			var percentLoaded = Math.round((evt.loaded / evt.total) * 100);			// Increase the progress bar length.			if (percentLoaded < 100) {				progressbar.progressbar( "value", percentLoaded);			}		}	}		function get_qif_value(tag, trn_str){ 		var retour;		$.each(trn_str, function(key,line){			if(line.substr(0,1) == tag){				retour = $.trim(line.substr(1, line.length - 1))				return false;			}		});		return String(retour);	} 		function client_import_transactions(){				var id_import;		id_import = hex_md5(Math.floor(Math.random() * 26003));		console.log("client_import_transactions, ID=" + id_import);				$('#dialog-import-transac').dialog('open');		$('#abort_link').click(function(){			reader.abort();		});		$('#abort_link').show();				//http://www.html5rocks.com/en/tutorials/file/dndfiles/?redirect_from_locale=fr		var files = $('input').get(1).files; // FileList object									f = files[0];				if (!f.name.match(/\.(qif)|(csv)$/)) {			$('#dialog-import-transac').dialog('close');			alert('Format du fichier incorrect ! Abandon...');			return;		}						reader = new FileReader();		reader.onerror = errorHandler;		reader.onprogress = updateProgress;		reader.onabort = function(e) {			$('#dialog-import-transac').dialog('close');			alert('Abandon de la lecture du fichier !');		};		reader.onloadstart = function(e) {			progressTitle.text('Chargement du fichier :');			progressbar.progressbar( "value", 0);		};		reader.onload = (function(theFile) {			return function(e) {								//http://stackoverflow.com/questions/5744064/html5-file-api-reading-in-an-xml-text-file-and-displaying-it-on-the-page				var data = e.target.result;								progressTitle.text('Traitement du fichier :');				progressbar.progressbar( "value", 0);								var nb_trn = substr_count(data,"^");				var start_trn_str = data.indexOf("\nD");				var len_trn_str = data.indexOf("^",start_trn_str) - start_trn_str;				id_compte = $('.actif').data('id');									var i = 0;				var nb_duplicates = 0;				var nb_error = 0;				var noty_ok = null;				var noty_wa = null;				var noty_ko = null;								clear_duplicate_decision_list();				while (i < nb_trn){					var percentLoaded = Math.round((i / nb_trn) * 100);					// Increase the progress bar length.					if (percentLoaded < 100) {						progressbar.progressbar( "value", percentLoaded);					}										var trn_str = data.substr(start_trn_str,len_trn_str).split("\n");										var t_id_transac = 'NEWID_' + Math.floor(Math.random() * 11113);										var t_montant= get_qif_value('T', trn_str).replace('+',''); 					if(get_qif_value('M', trn_str) != ''){						var t_libelle = utf8_encode(get_qif_value('M', trn_str)); 					}else{						var t_libelle = utf8_encode(get_qif_value('P', trn_str)); 					}										var t_id_categorie = 0;					var t_lib_categorie = "Sans catégorie";					console.log("ID Categorie actuelle=" + t_id_categorie);					$.each(categories, function(key, categorie){						var patterns = categorie.pattern.split(',');						$.each(patterns, function(key2, pattern){							if(pattern != "" && t_libelle.toUpperCase().indexOf(pattern) > 0){								t_id_categorie = categorie.id;								t_lib_categorie = categorie.nom;								console.log("Categorie trouvée : " + t_id_categorie);							}													});											});					console.log("ID Categorie nouvelle=" + t_id_categorie);																				var t_date = get_qif_value('D', trn_str).split('/');					if(t_date[2].length == 2 ) t_date[2] = '20'.t_date[2];					var t_date_transaction = t_date[2] + "-" + t_date[1] + "-" + t_date[0];										transaction = {id:t_id_transac, date_transaction:t_date_transaction, libelle:t_libelle, categorie:{nom:t_lib_categorie, id:t_id_categorie}, montant:t_montant};							prepend_transaction(transaction);										if(noty_ok == null){						noty_ok = noty({							layout: 'top',							type: 'success',							timeout: 10000,							text: (i+1) + ' transaction(s) ont été importées !'						});					}else{						noty_ok.setText((i+1) + ' transaction(s) ont été importées !');					}										$.ajax({						url: 'rpc.php?type=ADD_TRANSAC&force=0&id='+t_id_transac+'&id_compte='+id_compte+'&date='+t_date_transaction+'&libelle='+t_libelle+'&id_categorie='+t_id_categorie+'&montant='+t_montant+'&id_import='+id_import,						scriptCharset: "UTF-8",						context: $(this),						contentType: "application/x-www-form-urlencoded;charset=UTF-8",						success: function(data) {														if(data.duplicate != null){								nb_duplicates = nb_duplicates + 1;								transaction = {id:data.old_id};								remove_transaction(transaction);								call_for_duplicate_decision(data.duplicate);								if(noty_wa == null){									noty_wa = noty({										layout: 'top',										type: 'warning',										timeout: 10000,										text: nb_duplicates + ' transaction(s) existent déjà, impossible de les dupliquer !'									});								}else{									noty_wa.setText(nb_duplicates + ' transaction(s) existent déjà, impossible de les dupliquer !');								}															}else if(data.transaction != null){								transaction = {id:data.old_id};								update_transaction_id(transaction,data.transaction.id);							}else if(! data.status){								transaction = {id:data.old_id};								remove_transaction(transaction);								nb_error = nb_error + 1;																if(noty_ko == null){									noty_ko = noty({										layout: 'top',										type: 'warning',										timeout: 10000,										text: nb_error + ' à l\'ajout des transactions (Dernier msg : '+ data.error +') !'									});								}else{									noty_ko.setText(nb_error + ' à l\'ajout des transactions (Dernier msg : '+ data.error +') !');								}							}											}					});											start_trn_str = data.indexOf("\nD",start_trn_str +2);					len_trn_str = data.indexOf("^",start_trn_str) - start_trn_str; 					i = i+1;				}								//reset bindings				set_edit_transac_bindings();								//mise à jour des soldes par transaction				reset_solde_transactions();								$('#lien_undo_import').data('import_id', id_import);				$('#lien_undo_import').show();				$('#import_link').hide();								$('#lien_undo_import').click(function(){					undo_import($('#lien_undo_import').data('import_id'));				});				$('#dialog-import-transac').dialog('close');											};		})(f);		reader.readAsText(f);	}		function undo_import(import_id){				if(import_id != ''){					console.log("Annulation de l'import " + import_id);						$.getJSON('./importer.php?undoid=' + import_id, function(data){								if(data.status){					id_compte = $('.actif').data('id');					get_compte(id_compte);										$('#lien_undo_import').data('import_id', '');					$('#lien_undo_import').hide();					$('#import_link').show();										var notif = noty({						layout: 'top',						type: 'success',						timeout: 10000,						text: 'L\'import a bien été annulé, ' +data.nb_transactions+ ' transactions supprimée(s) !'					});									}else{										var notif = noty({						layout: 'top',						type: 'error',						timeout: 3000,						text: data.error					});									}											});		}else{			console.log("Appel undo_import sans ID");		}	}</script><div id="dialog-import-transac" class="dialog" title="Import de transactions">	<style>	  .progress-label {		float: left;		margin-left: 50%;		margin-top: 5px;		font-weight: bold;		text-shadow: 1px 1px 0 #fff;	  }	  #progressbar .ui-progressbar-value {		background-color: #ccc;	  }	</style>	<div id="progresstitle">&nbsp;</div>	<div id="progressbar"><div class="progress-label"></div></div>	<div>		<span id="abort_link" class="lien">Annuler</span>	</div></div>